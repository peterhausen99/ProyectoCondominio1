// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

///Perfil Usuario///
model PerfilUsuario {
  id          Int       @id @default(autoincrement())
  usuarios    Usuario[]
  descripcion String
  
}

/// Usuario///
model Usuario {
  idCedula Int @id

  perfilUsuario   PerfilUsuario @relation(fields: [perfilUsuarioId], references: [id])
  perfilUsuarioId Int

  reservas    Reserva[]
  residencias Residencia[]
  incidencias Incidencia[]

  nombre      String
  apellido1   String
  apellido2   String
  correo      String   @unique
  contrasenna String
  telefono    String
  estado      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  
}

///Reserva///
model Reserva {
  id        Int     @id @default(autoincrement()) 
  usuario   Usuario @relation(fields: [idUsuario], references: [idCedula])
  idUsuario Int

  areaComun   AreaComun @relation(fields: [idAreaComun], references: [id])
  idAreaComun Int

  diaReservacion DateTime
  estado         String
  detalles       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
}

///Area Comun///
model AreaComun {
  id          Int      @id @default(autoincrement()) 
  reservas Reserva[]

  descripcion String
  capacidad   Int
  estado      String
  ubicacion   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  
}

///Incidencias///
model Incidencia {
  id Int @id @default(autoincrement())
  usuario   Usuario @relation(fields: [idUsuario], references: [idCedula])
  idUsuario Int

  descripcion String
  estado      String
  fecha       DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

///----------------------------------------------------------------------------------------------------------///

model Rubro {
  id          Int      @id @default(autoincrement()) 
  planes      Plan[]
  descripcion String
  valor       Decimal @db.Decimal(10, 2)
  estado      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt  
}
model Plan {
  id          Int     @id @default(autoincrement())
  descripcion String
  totalPlan   Decimal @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  rubros      Rubro[]
  residencia AsignacionPlan[]
}
model AsignacionPlan {
  
  residencias Residencia @relation(fields: [idResidencia], references: [id])
  idResidencia Int

  plan Plan @relation(fields: [idPlan], references: [id])
  idPlan Int

  mes    String
  estado String
  iva    Decimal @db.Decimal(10, 2)
  total  Decimal @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt 

  @@id([idResidencia, idPlan])
}

model Residencia {
  id Int @id @default(autoincrement())
  usuario   Usuario @relation(fields: [idUsuario], references: [idCedula])
  idUsuario Int
  cantidadPersonas Int
  estado           String
  annoInicio       DateTime @default(now())
  cantidadCarros   Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
  plan AsignacionPlan []
}

model Informacion {
  id Int @id @default(autoincrement())
  titulo String
  mensaje String
  estado String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
